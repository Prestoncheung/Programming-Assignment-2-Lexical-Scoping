## Put comments here that give an overall description of what your functions do

#This function creates a special "matrix" that is really a list containing a function to 
# 1 - set the value of the matrix
# 2 - get the value of the matrix
# 3 - set the value of the inverse of the matrix
# 4 - get the value of the inverse of the matrix

makeCacheMatrix <- function(x = matrix(sample(1:100,9),3,3)) {
  invert <- NULL
  set <- function(y) {
    x <<- y
    invert <<- NULL
  }
  get <- function() x
  setsolve <- function(solve) invert <<- solve
  getsolve <- function() invert
  list(set = set, get = get,
       setsolve = setsolve,
       getsolve = getsolve)
}

## Write a short comment describing this function
## the code following use the matrix created by the above "makeCacheMatrix" to calculate the inverse of it

cacheSolve <- function(x, ...) {
  invert <- x$getsolve()
  if(!is.null(invert)) {
    message("getting inversed matrix")
    return(invert)
  }
  data <- x$get()
  invert <- solve(data, ...)
  x$setsolve(invert)
  invert
}
